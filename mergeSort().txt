#include <stdio.h>
#include<string.h>

void merge(int[],int[],int);
void mSort(int[],int[],int);
void mergeSort(int[],int);

void mSort(int arr[],int mergeArray[],int n){
    if(n>1){
        mSort(arr,mergeArray,n/2);
        mSort(arr+n/2,mergeArray,n-n/2);
        merge(arr,mergeArray,n);
    }
}

void merge(int arr[],int mergeArray[],int n){
    int i=0,j=n/2,k=0;
    while(i<n/2 && j<n){
        if(arr[i]<arr[j]){
            mergeArray[k]=arr[i];
            k++;
            i++;
        }
        else{
            mergeArray[k]=arr[j];
            j++;
            k++;
        }
    }
    while(i<n/2){
        mergeArray[k]=arr[i];
        k++;
        i++;
    }
    while(j<n){
        mergeArray[k]=arr[j];
        k++;
        j++;
    }
    for(k=0;k<n;k++){
        arr[k]=mergeArray[k];
    }
}


void mergeSort(int arr[],int n){
    int *mergeArray=malloc(sizeof(int)*n);
    mSort(arr,mergeArray,n);
    free(mergeArray);
}



int main()
{
    int arr[]={9,6,3,5,12,64,35,11,7,2,1};
    int n=sizeof(arr)/sizeof(arr[0]);
    printf("**VOR**\n");
    for(int i=0;i<n;i++){
        printf("%d\t",arr[i]);
    }

    mergeSort(arr,n);
    printf("\n\n**NACH**\n");
    for(int i=0;i<n;i++){
        printf("%d\t",arr[i]);
    }
}


